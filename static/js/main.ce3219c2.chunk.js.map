{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","handler","event","setState","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,IAAK,IAFT,EAaEC,QAAU,SAACC,GACT,IAAQF,EAAQE,EAARF,IAER,EAAKG,SAAS,CAAEH,SAhBpB,uDAKE,WACEI,SAASC,iBAAiB,QAASC,KAAKL,WAN5C,kCASE,WACEG,SAASG,oBAAoB,QAASD,KAAKL,WAV/C,oBAmBE,WACE,IAAQD,EAAQM,KAAKP,MAAbC,IAER,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACIR,EAAG,mCAC2BA,EAD3B,KAED,kCA3Bd,GAAyBS,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.ce3219c2.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  key: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    key: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handler);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handler);\n  }\n\n  handler = (event: KeyboardEvent) => {\n    const { key } = event;\n\n    this.setState({ key });\n  };\n\n  render() {\n    const { key } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          { key\n            ? `The last pressed key is [${key}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}